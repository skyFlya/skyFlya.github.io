{
    "version": "https://jsonfeed.org/version/1",
    "title": "Stay hungry , Stay foolish • All posts by \"js\" category",
    "description": "巴拉巴拉",
    "home_page_url": "https://skyFlya.github.io",
    "items": [
        {
            "id": "https://skyflya.github.io/2022/05/25/fhlS3Xe70jONJPD1/",
            "url": "https://skyflya.github.io/2022/05/25/fhlS3Xe70jONJPD1/",
            "title": "JS常用代码",
            "date_published": "2022-05-25T15:39:14.000Z",
            "content_html": "<blockquote>\n<p>部分Js常用方法</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"世界坐标和节点坐标转换\">世界坐标和节点坐标转换<a title=\"#世界坐标和节点坐标转换\" href=\"#世界坐标和节点坐标转换\"></a></h1>\n<p>//把cocos的坐标转成世界坐标pos1 （只能父节点转）<br>\nvar pos1 = this.cocos1.parent.convertToWorldSpaceAR(this.cocos1.getPosition());<br>\ncc.log(pos1)</p>\n<p>//把（世界坐标pos1）转成相对于节点cocos的坐标<br>\nvar pos2 = this.cocos1.convertToNodeSpaceAR(pos1);<br>\ncc.log(pos2)</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 节点坐标转换<span class=\"operator\"></span></span><br><span class=\"line\"><span class=\"operator\">* </span>@param node 欲要转换的节点<span class=\"operator\"></span></span><br><span class=\"line\"><span class=\"operator\">* </span>@param newParent 新父节点</span><br><span class=\"line\">*/</span><br><span class=\"line\">convert<span class=\"constructor\">ToParent(<span class=\"params\">node</span>: <span class=\"params\">cc</span>.Node, <span class=\"params\">newParent</span>: <span class=\"params\">cc</span>.Node, <span class=\"params\">offset</span>?: <span class=\"params\">cc</span>.Vec2)</span>: cc.Vec2 &#123;</span><br><span class=\"line\">    const worldPos = node.convert<span class=\"constructor\">ToWorldSpaceAR(<span class=\"params\">offset</span> <span class=\"operator\">||</span> <span class=\"params\">cc</span>.<span class=\"params\">v2</span>(0, 0)</span>);</span><br><span class=\"line\">    return newParent.convert<span class=\"constructor\">ToNodeSpaceAR(<span class=\"params\">worldPos</span>)</span>;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h1 id=\"通过两点算出角度的方法\">通过两点算出角度的方法<a title=\"#通过两点算出角度的方法\" href=\"#通过两点算出角度的方法\"></a></h1>\n<figure class=\"highlight gml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getAngle:<span class=\"keyword\">function</span>(start,<span class=\"keyword\">end</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"symbol\">x</span> = <span class=\"keyword\">end</span>.<span class=\"symbol\">x</span> - start.<span class=\"symbol\">x</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"symbol\">y</span> = <span class=\"keyword\">end</span>.<span class=\"symbol\">y</span> - start.<span class=\"symbol\">y</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> hypotenuse = Math.<span class=\"built_in\">sqrt</span>(<span class=\"symbol\">x</span>*<span class=\"symbol\">x</span> + <span class=\"symbol\">y</span>*<span class=\"symbol\">y</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"built_in\">cos</span> = <span class=\"symbol\">x</span> / hypotenuse</span><br><span class=\"line\">    <span class=\"keyword\">var</span> radian = Math.acos(<span class=\"built_in\">cos</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//求出弧度</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> angle = <span class=\"number\">180</span> / (Math.PI / radian)</span><br><span class=\"line\">    <span class=\"comment\">//用弧度算出角度</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"symbol\">y</span> &lt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        angle = <span class=\"number\">0</span>-angle</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"symbol\">y</span> == <span class=\"number\">0</span> &amp;&amp; <span class=\"symbol\">x</span> &lt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        angle = <span class=\"number\">180</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">90</span>-angle</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h1 id=\"js去掉空格方法\">Js去掉空格方法<a title=\"#js去掉空格方法\" href=\"#js去掉空格方法\"></a></h1>\n<figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//实现</span></span><br><span class=\"line\"><span class=\"keyword\">String</span>.prototype.<span class=\"built_in\">trim</span> = function() &#123;</span><br><span class=\"line\">  var <span class=\"built_in\">str</span> = <span class=\"keyword\">this</span>,</span><br><span class=\"line\">  <span class=\"built_in\">str</span> = <span class=\"built_in\">str</span>.replace(/^\\s\\s*/, <span class=\"string\">&#x27;&#x27;</span>),</span><br><span class=\"line\">  ws = /\\s/,</span><br><span class=\"line\">  i = <span class=\"built_in\">str</span>.length;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (ws.test(<span class=\"built_in\">str</span>.charAt(--i)));</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">str</span>.slice(<span class=\"number\">0</span>, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> greeting = <span class=\"string\">&#x27;   Hello world!   &#x27;</span>;</span><br><span class=\"line\">console.<span class=\"built_in\">log</span>(greeting.<span class=\"built_in\">trim</span>()); <span class=\"comment\">//执行</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"输入一个值，返回其数据类型\">输入一个值，返回其数据类型<a title=\"#输入一个值，返回其数据类型\" href=\"#输入一个值，返回其数据类型\"></a></h1>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title\">type</span>(para) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">Object.prototype.toString.call(para)</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"数组去重\">数组去重<a title=\"#数组去重\" href=\"#数组去重\"></a></h1>\n<figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique1</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [...<span class=\"keyword\">new</span> Set(arr)]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique2</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.filter(<span class=\"function\"><span class=\"params\">ele</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!obj[ele]) &#123;</span><br><span class=\"line\">            obj[ele] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique3</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = [];</span><br><span class=\"line\">    arr.forEach(<span class=\"function\"><span class=\"params\">ele</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (result.indexOf(ele) == <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">            result.push(ele)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"字符串去重\">字符串去重<a title=\"#字符串去重\" href=\"#字符串去重\"></a></h1>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String.prototype.unique = function () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = &#123;&#125;,</span><br><span class=\"line\">        str = <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        len = <span class=\"keyword\">this</span>.length;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!obj[<span class=\"keyword\">this</span>[i]]) &#123;</span><br><span class=\"line\">            str += <span class=\"keyword\">this</span>[i];</span><br><span class=\"line\">            obj[<span class=\"keyword\">this</span>[i]] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">###### <span class=\"comment\">//去除连续的字符串 </span></span><br><span class=\"line\">function uniq(str) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str.replace(/(\\w)\\<span class=\"number\">1</span>+/g, <span class=\"string\">&#x27;$1&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"深拷贝-浅拷贝\">深拷贝 浅拷贝<a title=\"#深拷贝-浅拷贝\" href=\"#深拷贝-浅拷贝\"></a></h1>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//深克隆（深克隆不考虑函数）</span></span><br><span class=\"line\">function deepClone(obj, result) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = result || &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> <span class=\"keyword\">prop</span> <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (obj.hasOwnProperty(<span class=\"keyword\">prop</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> obj[<span class=\"keyword\">prop</span>] == &#x27;object&#x27; &amp;&amp; obj[<span class=\"keyword\">prop</span>] !== null) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 引用值(obj/array)且不为null</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Object.prototype.<span class=\"keyword\">toString</span>.call(obj[<span class=\"keyword\">prop</span>]) == &#x27;[object Object]&#x27;) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 对象</span></span><br><span class=\"line\">                    result[<span class=\"keyword\">prop</span>] = &#123;&#125;;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 数组</span></span><br><span class=\"line\">                    result[<span class=\"keyword\">prop</span>] = [];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                deepClone(obj[<span class=\"keyword\">prop</span>], result[<span class=\"keyword\">prop</span>])</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 原始值或func</span></span><br><span class=\"line\">        result[<span class=\"keyword\">prop</span>] = obj[<span class=\"keyword\">prop</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 深浅克隆是针对引用值</span></span><br><span class=\"line\">function deepClone(target) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> (target) !== &#x27;object&#x27;) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> target;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Object.prototype.<span class=\"keyword\">toString</span>.call(target) == &#x27;[object Array]&#x27;) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 数组</span></span><br><span class=\"line\">        result = []</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 对象</span></span><br><span class=\"line\">        result = &#123;&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> <span class=\"keyword\">prop</span> <span class=\"keyword\">in</span> target) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target.hasOwnProperty(<span class=\"keyword\">prop</span>)) &#123;</span><br><span class=\"line\">            result[<span class=\"keyword\">prop</span>] = deepClone(target[<span class=\"keyword\">prop</span>])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"防抖\">防抖<a title=\"#防抖\" href=\"#防抖\"></a></h1>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">debounce</span>(<span class=\"params\">handle, delay</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> _self = <span class=\"built_in\">this</span>,</span><br><span class=\"line\">            _args = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">        <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">        timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            handle.apply(_self, _args)</span><br><span class=\"line\">        &#125;, delay)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"节流\">节流<a title=\"#节流\" href=\"#节流\"></a></h1>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">throttle</span>(<span class=\"params\">handler, wait</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lastTime = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> nowTime = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nowTime - lastTime &gt; wait) &#123;</span><br><span class=\"line\">            handler.apply(<span class=\"built_in\">this</span>, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">            lastTime = nowTime;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "JS",
                "工具类"
            ]
        },
        {
            "id": "https://skyflya.github.io/2022/05/25/Wsj4BSG3DcmlUTlE/",
            "url": "https://skyflya.github.io/2022/05/25/Wsj4BSG3DcmlUTlE/",
            "title": "JS number 精度丢失问题",
            "date_published": "2022-05-25T15:39:11.000Z",
            "content_html": "<blockquote>\n<p>数值位大引发的精准度问题</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"如果数值超过16位，就用string类型！否则序列化后数值会不准！\"><strong>如果数值超过16位，就用String类型！否则序列化后数值会不准！</strong><a title=\"#如果数值超过16位，就用string类型！否则序列化后数值会不准！\" href=\"#如果数值超过16位，就用string类型！否则序列化后数值会不准！\"></a></h1>\n<h1 id=\"例子：\">例子：<a title=\"#例子：\" href=\"#例子：\"></a></h1>\n<p>用户反馈自己的用户ID，需要做一些业务操作，结果发现通过用户截图的用户ID，并不能在数据库里找到该用户<br>\n后经发现，客户端 JS 受制于 精准度 的问题，一旦长度超过16位，就会导致序列化后不准</p>\n<p>服务器发送的数据，userid， 浏览器实际接收到的数据<br>\n<img src=\"https://s1.ax1x.com/2022/05/25/XkP2b8.png\" alt=\"bWKCWV.png\" loading=\"lazy\"></p>\n<p>客户端序列化后的数据，可以看到数值已经变了<br>\n<img src=\"https://s1.ax1x.com/2022/05/25/XkPfUg.png\" alt=\"bWKCWV.png\" loading=\"lazy\"></p>\n<h1 id=\"解决方案：\">解决方案：<a title=\"#解决方案：\" href=\"#解决方案：\"></a></h1>\n<p>超过16位的数值，对应服务器long类型，下发一律使用string。</p>\n",
            "tags": [
                "JS"
            ]
        }
    ]
}