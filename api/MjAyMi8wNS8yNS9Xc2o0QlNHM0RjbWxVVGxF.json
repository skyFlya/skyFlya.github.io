{"title":"JS number 精度丢失问题","date":"2022-05-25T15:39:11.000Z","date_formatted":{"ll":"2022年5月25日","L":"2022/05/25","MM-DD":"05-25"},"thumbnail":"https://s1.ax1x.com/2022/03/14/bLrVJK.md.png","link":"2022/05/25/Wsj4BSG3DcmlUTlE","comments":true,"tags":["JS"],"categories":["JS"],"updated":"2022-05-25T08:00:45.562Z","content":"<blockquote>\n<p>数值位大引发的精准度问题</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"如果数值超过16位，就用string类型！否则序列化后数值会不准！\"><strong>如果数值超过16位，就用String类型！否则序列化后数值会不准！</strong><a title=\"#如果数值超过16位，就用string类型！否则序列化后数值会不准！\" href=\"#如果数值超过16位，就用string类型！否则序列化后数值会不准！\"></a></h1>\n<h1 id=\"例子：\">例子：<a title=\"#例子：\" href=\"#例子：\"></a></h1>\n<p>用户反馈自己的用户ID，需要做一些业务操作，结果发现通过用户截图的用户ID，并不能在数据库里找到该用户<br>\n后经发现，客户端 JS 受制于 精准度 的问题，一旦长度超过16位，就会导致序列化后不准</p>\n<p>服务器发送的数据，userid， 浏览器实际接收到的数据<br>\n<img src=\"https://s1.ax1x.com/2022/05/25/XkP2b8.png\" alt=\"bWKCWV.png\" loading=\"lazy\"></p>\n<p>客户端序列化后的数据，可以看到数值已经变了<br>\n<img src=\"https://s1.ax1x.com/2022/05/25/XkPfUg.png\" alt=\"bWKCWV.png\" loading=\"lazy\"></p>\n<h1 id=\"解决方案：\">解决方案：<a title=\"#解决方案：\" href=\"#解决方案：\"></a></h1>\n<p>超过16位的数值，对应服务器long类型，下发一律使用string。</p>\n","prev":{"title":"Cocos和Android对接文档","link":"2022/05/25/mK3j7ZNSzWeqzUeI"},"next":{"title":"Cocos 热更新简介、原理、流程、案例","link":"2022/05/23/Ca1AaW7p1PQIV0tF"},"plink":"https://skyFlya.github.io/2022/05/25/Wsj4BSG3DcmlUTlE/","toc":[{"id":"如果数值超过16位，就用string类型！否则序列化后数值会不准！","title":"如果数值超过16位，就用String类型！否则序列化后数值会不准！","index":"1"},{"id":"例子：","title":"例子：","index":"2"},{"id":"解决方案：","title":"解决方案：","index":"3"}],"reward":true,"copyright":{"custom":"Copyright:自由转载-非商用-禁止演绎-保持署名（CC BY-NC-ND 4.0）"}}